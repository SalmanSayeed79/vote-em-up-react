{"version":3,"sources":["img/home.png","firebase/firestore.js","home-out.js","candidate.js","election-page.js","cards.js","home-on.js","winner.js","results-page.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","db","firestore","auth","HomeOut","useState","loggedin","setLoggedin","useEffect","onAuthStateChanged","user","console","log","to","className","id","onSubmit","e","preventDefault","email","document","querySelector","value","password","createUserWithEmailAndPassword","createNewAccount","type","name","placeholder","onClick","classList","remove","signInWithEmailAndPassword","logIn","add","src","home","Candidate","data","document_id","dept","details","currentVote","votes","newVote","collection","doc","update","ElectionPage","matchedData","match","params","hideModal","candidates","setCandidates","arr","getCandidates","get","then","res","docs","forEach","a","push","form","set","createNewCandidate","map","key","Cards","props","active","HomeOn","setData","getData","hideNewElectionModal","election_name","alert","addData","signOut","style","textDecoration","Winner","position","ResultsPage","winners","winner","setWinner","orderBy","index","indexOf","App","path","exact","component","Boolean","window","location","hostname","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.eb9098c2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/home.bc5e575b.png\";","import firebase from 'firebase'\r\nimport 'firebase/auth'\r\nimport 'firebase/firestore'\r\n\r\n\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyBlD0hgTE9FokUkY7vAsvr-4xGG19PNvX0\",\r\n    authDomain: \"voting-react.firebaseapp.com\",\r\n    databaseURL: \"https://voting-react.firebaseio.com\",\r\n    projectId: \"voting-react\",\r\n    storageBucket: \"voting-react.appspot.com\",\r\n    messagingSenderId: \"374523551882\",\r\n    appId: \"1:374523551882:web:9a034f69ba6979fdfa0d73\"\r\n  };\r\n  // Initialize Firebase\r\n  firebase.initializeApp(firebaseConfig);\r\n\r\nconst db=firebase.firestore();\r\nconst auth=firebase.auth()\r\n\r\nexport default firebase\r\nexport {db,auth}","import React,{useEffect,useState} from 'react'\r\nimport './styles/homeOut.css'\r\nimport home from './img/home.png'\r\nimport './styles/homeOut.css'\r\nimport './styles/modal.css'\r\nimport {Redirect} from 'react-router-dom'\r\nimport {db,auth} from './firebase/firestore'\r\n\r\nexport default function HomeOut() {\r\n\r\n            \r\n    //=================================================\r\n\r\n    //Listening to auth change\r\n    \r\n    //================================================= \r\n        const [loggedin,setLoggedin]=useState(false)\r\n        const listenToLogin=()=>{\r\n            auth.onAuthStateChanged((user)=>{\r\n                console.log('state changed')\r\n                if(user){\r\n                    setLoggedin(true)\r\n                    return <Redirect to='/home'/>    \r\n                }\r\n                else{\r\n                    console.log('no user')\r\n                }\r\n\r\n            })\r\n        }\r\n\r\n        useEffect(()=>listenToLogin(),[])\r\n        \r\n    //=================================================\r\n\r\n    //Creating Modals account\r\n\r\n    //================================================= \r\n        //modal functions\r\n        function showCreateAccountModal(){\r\n            let modal=document.querySelector(\"#create-account-modal\");\r\n            modal.classList.add(\"show-modal\")\r\n        }\r\n        function hideCreateAccountModal(){\r\n            let modal=document.querySelector(\"#create-account-modal\");\r\n            modal.classList.remove(\"show-modal\")\r\n        }\r\n        //login modal functions\r\n        function showLoginModal(){\r\n            let modal=document.querySelector(\"#log-in-modal\");\r\n            modal.classList.add(\"show-modal\")\r\n        }\r\n        function hideLoginModal(){\r\n            let modal=document.querySelector(\"#log-in-modal\");\r\n            modal.classList.remove(\"show-modal\")\r\n        }\r\n\r\n        \r\n    //=================================================\r\n\r\n    //Creating account  and logging in\r\n\r\n    //================================================= \r\n\r\n    const createNewAccount =(e)=>{\r\n        e.preventDefault();\r\n        let email=document.querySelector(\".new-can-modal\").email.value;\r\n        let password=document.querySelector(\".new-can-modal\").password.value;\r\n        // console.log(email)\r\n        // console.log(password)\r\n        auth.createUserWithEmailAndPassword(email,password)\r\n        console.log('created')\r\n    }\r\n\r\n    const logIn=(e)=>{\r\n        e.preventDefault();\r\n        let email=document.querySelector(\".log-in-modal\").email.value;\r\n        let password=document.querySelector(\".log-in-modal\").password.value;\r\n        console.log(email)\r\n        console.log(password)\r\n        auth.signInWithEmailAndPassword(email,password)\r\n    }\r\n    //=================================================\r\n\r\n    //Redirecting if logged in\r\n\r\n    //================================================= \r\n    if(loggedin){\r\n        return <Redirect to='/home'/>\r\n    }\r\n  \r\n    return(\r\n        \r\n        <div className=\"home-out\">\r\n\r\n            <div className=\"modal-container\" id=\"create-account-modal\">\r\n                    <div className=\"modal\">\r\n                        <h2>Create New Account</h2>\r\n                        <form className=\"new-can-modal\" onSubmit={e=>createNewAccount(e)}>\r\n                            <input type=\"text\" name=\"name\" placeholder=\"User Name\"/>\r\n                            <input type=\"email\" name=\"email\" placeholder=\"User Email\"/ >\r\n                            <input type=\"password\" name=\"password\" placeholder=\"User Password\"/ >\r\n                            <button>Submit</button>\r\n                        </form>\r\n                        <p onClick={hideCreateAccountModal}>x</p>\r\n                    </div>\r\n            </div>\r\n\r\n            <div className=\"modal-container\" id=\"log-in-modal\">\r\n                <div className=\"modal\">\r\n                    <h2>Log In</h2>\r\n                    <form className=\"log-in-modal\" onSubmit={e=>logIn(e)}>\r\n                        <input type=\"email\" name=\"email\" placeholder=\"User Email\"/ >\r\n                        <input type=\"password\" name=\"password\" placeholder=\"User Password\"/ >\r\n                        <button>Submit</button>\r\n                    </form>\r\n                    <p onClick={hideLoginModal}>x</p>\r\n                </div>\r\n            </div>\r\n        \r\n        \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n            <div className=\"navbar\">\r\n                <h1>Vote EM UP</h1>\r\n            </div>\r\n            <div className=\"main-part\">\r\n                <div className=\"texts\">\r\n                    <h2>JOIN US</h2>\r\n                    <p>And be a part of the best voting experience ever</p>\r\n                    <div className=\"buttons\">\r\n                    \r\n                        <h3 onClick={showCreateAccountModal}>Create Account</h3>\r\n                      \r\n                        <h3 onClick={showLoginModal}>Log In</h3>\r\n                    </div>\r\n                </div>\r\n\r\n                <img src={home} />\r\n\r\n\r\n            </div>\r\n\r\n    \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport './styles/candidate.css'\r\nimport { db } from './firebase/firestore'\r\n\r\nexport default function Candidate({ data,document_id}) {\r\n    const addVote=()=>{\r\n        //adding the vote\r\n            let currentVote=data.votes;\r\n            let newVote=currentVote+1\r\n            console.log(currentVote)\r\n            console.log(document_id)\r\n            db.collection('files').doc(document_id).collection(\"candidates\").doc(data.name).update({\r\n                votes :newVote\r\n            })\r\n           \r\n        }\r\n    \r\n    \r\n    return (\r\n    \r\n        <div className=\"candidate\">\r\n            <div className=\"title\">\r\n                <h3>{data.name}</h3>\r\n                <h4>{data.dept}</h4>\r\n            </div>\r\n            <p>{data.details}</p>\r\n            <h2 id={`vote-button${data.name}` }onClick={addVote}>Vote</h2>\r\n        \r\n        </div>\r\n    )\r\n}\r\n","import React,{useState,useEffect} from 'react'\r\nimport './styles/electionPage.css'\r\nimport Candidate from './candidate'\r\nimport {Link} from 'react-router-dom'\r\nimport './styles/modal.css'\r\nimport { db } from './firebase/firestore'\r\nimport firebase from 'firebase'\r\n\r\n\r\nexport default function ElectionPage(matchedData) {\r\n    //getting all the url form the returned data\r\n    let document_id=matchedData.match.params.id\r\n    //console.log(matchedData)\r\n    //console.log(document_id)\r\n    //===========================MODAL FUNCTIONS=====================//\r\n\r\n    function showModal(){\r\n            let modal=document.querySelector(\"#add-candidate-modal\");\r\n            modal.classList.add(\"show-modal\")\r\n        }\r\n    function hideModal(){\r\n            let modal=document.querySelector(\"#add-candidate-modal\");\r\n            modal.classList.remove(\"show-modal\")\r\n        }\r\n\r\n\r\n\r\n    //=====================GETTING CANDIDATE FUNCTION========================\r\n        const [candidates,setCandidates]=useState([])\r\n        let arr=[]\r\n        function getCandidates(){\r\n            db.collection('files').doc(document_id).collection(\"candidates\").get()\r\n                .then(res=>{\r\n                    res.docs.forEach(a=>{\r\n                        //console.log(a.data())\r\n                        arr.push(a.data()) \r\n                    }\r\n                    )\r\n                    setCandidates(arr)\r\n                    \r\n                })\r\n\r\n        }\r\n        \r\n        useEffect(()=>getCandidates(),[])\r\n        console.log(candidates)\r\n        \r\n        \r\n\r\n\r\n\r\n\r\n    \r\n    //=====================ADDING CANDIDATE FUNCTION========================\r\n        const createNewCandidate=(e)=>{\r\n            e.preventDefault()\r\n            let form=document.querySelector(\".create-can-modal\")\r\n            // console.log(form.name.value)\r\n            // console.log(form.dept.value)\r\n            // console.log(form.details.value)\r\n            db.collection(\"files\").doc(document_id).collection(\"candidates\").doc(form.name.value).set({\r\n                name:form.name.value,\r\n                dept:form.dept.value,\r\n                details:form.details.value,\r\n                votes:0\r\n            })\r\n\r\n            hideModal()\r\n            getCandidates()\r\n            \r\n        }\r\n\r\n\r\n\r\n    return (\r\n\r\n        \r\n     \r\n\r\n        <div className=\"election-page\">\r\n\r\n            {/*======================modal==============================*/}\r\n            <div className=\"modal-container\" id=\"add-candidate-modal\">\r\n                    <div className=\"modal\">\r\n                        <h2>Add new candidate</h2>\r\n                        <form className=\"create-can-modal\" onSubmit={console.log(\"candidate created\")}>\r\n                            <input type=\"text\" name=\"name\" placeholder=\"Candidate Name\"/>\r\n                            <input type=\"text\" name=\"dept\" placeholder=\"Candidate Dept\"/>\r\n                            <textarea name=\"details\" placeholder=\"Candidate details\"/>\r\n                            <button onClick={(e)=>createNewCandidate(e)}>Submit</button>\r\n                        </form>\r\n                        <p onClick={hideModal}>x</p>\r\n                    </div>\r\n            </div>\r\n\r\n\r\n            <div className=\"top-bar\">\r\n                <div className=\"navbar\">\r\n                    <h1>Vote EM UP</h1>\r\n                </div>\r\n                <Link to='/home'><p> Go back </p></Link>\r\n                <Link to={`/results/${document_id}`}><h6> See Results</h6></Link>\r\n                <h2>Best footballer in the world</h2>\r\n                \r\n            </div>\r\n            <div className=\"candidates\" >\r\n                {candidates.map(a=>(\r\n                    <Candidate key={a.name} data={a} document_id={document_id}/>\r\n                ))}\r\n            </div>\r\n            <button id=\"new_candidate\" onClick={showModal}>Create new candidate</button>\r\n            \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport './styles/cards.css'\r\nimport ElectionPage from './election-page';\r\nimport { render } from '@testing-library/react';\r\n\r\n\r\nexport default function Cards(props) {\r\n    let electionData=props.data\r\n    const goToElection=()=>{\r\n        console.log('clicked')\r\n       \r\n    }\r\n    console.log(props.data)\r\n\r\n    return (\r\n        <div className=\"cards\">\r\n            <div>{props.data.active? <p>Active</p>:<p>Completed</p> }</div>\r\n            <h2 onClick={goToElection}>{props.data.name}</h2>\r\n            <div className=\"creation\">\r\n                <h4>Created by: Salman Sayeed</h4>\r\n                <h4>Created on: 17-6-2020</h4>\r\n            </div>\r\n\r\n            <div className=\"bottom-bar\">\r\n                <h3>{5} <span>Candidates</span></h3>\r\n                <h3>5 <span>Voters</span></h3>\r\n                <h3>5 <span>Dates</span></h3>\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n","import React,{useEffect, useState} from 'react';\r\nimport './styles/homeOn.css';\r\nimport './styles/modal.css'\r\nimport Cards from './cards'\r\nimport {Link, Redirect} from 'react-router-dom'\r\nimport {useQuery} from 'react-query'\r\n\r\nimport {db,auth} from './firebase/firestore'\r\n\r\nexport default function HomeOn() {\r\n\r\n     //=================================================\r\n\r\n    //Getting data\r\n\r\n    //================================================= \r\n        \r\n        //declaring states\r\n        const [data,setData]=useState([]);\r\n        const [submit,setSubmit]=useState('false');\r\n\r\n\r\n        const getData=()=>{\r\n            db.collection('files').get()\r\n            .then(data=>{\r\n                setData(data.docs.map(a=>a.data()))\r\n            })\r\n        \r\n            \r\n        }\r\n        useEffect(()=>{\r\n            getData();\r\n            console.log(data);\r\n        },[])\r\n        \r\n        \r\n     //=================================================\r\n\r\n    //Logging out user\r\n\r\n    //================================================= \r\n        const [loggedin,setLoggedin]=useState(true)\r\n        const logUserOut=()=>{\r\n\r\n            auth.signOut()\r\n            console.log(\"logged out\")\r\n            setLoggedin(false)\r\n            \r\n        }\r\n        if(!loggedin){\r\n            return(<Redirect to='/'/>)\r\n        }else{\r\n\r\n        }\r\n         //=================================================\r\n\r\n        // Creating new cards\r\n\r\n        //=================================================\r\n        const addData=(e)=>{\r\n            e.preventDefault();\r\n            let form=document.querySelector(\".new-can-modal\")\r\n            console.log(form.election_name.value)\r\n            db.collection('files').doc(form.election_name.value).set({\r\n                active: true,\r\n                name:form.election_name.value,\r\n                // candidates:[\r\n                //     {\r\n                //         dept:form.candidate_dept.value,\r\n                //         name:form.candidate_name.value,\r\n                //         details:form.candidate_details.value,\r\n                //         votes:0,\r\n                //         voters:[]\r\n                //     }\r\n                // ]\r\n            })\r\n            alert(\"New Election Added\")\r\n            hideNewElectionModal()\r\n            getData();\r\n        }\r\n\r\n\r\n //=================================================\r\n\r\n  //UI\r\n\r\n  //=================================================\r\n\r\n\r\n\r\n    //modal functions\r\n    function showNewElectionModal(){\r\n        let modal=document.querySelector(\"#new-election-modal\");\r\n        modal.classList.add(\"show-modal\")\r\n    }\r\n    function hideNewElectionModal(){\r\n        let modal=document.querySelector(\"#new-election-modal\");\r\n        modal.classList.remove(\"show-modal\")\r\n    }\r\n    \r\n    return (\r\n\r\n        \r\n        <div className=\"home-on\">\r\n            \r\n            <div className=\"modal-container\" id=\"new-election-modal\">\r\n                <div className=\"modal\">\r\n                    <h2>Create New Election</h2>\r\n                    <form className=\"new-can-modal\" onSubmit={e=>addData(e)}>\r\n                        <input type=\"text\" name=\"election_name\" placeholder=\"Election Name\"/>\r\n                        <input type=\"text\" name=\"candidate_name\" placeholder=\"First Candidate's Name\"/>\r\n                        <input type=\"text\" name=\"candidate_dept\" placeholder=\"First Candidate' Department\"/>\r\n                        <textarea type=\"textbox\" name=\"candidate_details\" placeholder=\"First Candidate' Details\"/>\r\n                        <button>Submit</button>\r\n                    </form>\r\n                    <p onClick={hideNewElectionModal}>x</p>\r\n                </div>\r\n            </div>\r\n        \r\n            \r\n            \r\n            <div className=\"navbar\">\r\n                <h1>Vote EM UP</h1>\r\n                <div className=\"others\">\r\n                    <h2 id=\"log-out-button\" onClick={logUserOut}>Log Out</h2>\r\n                    <h2 >Welcome, <span id=\"user-name\">Salman Sayeed</span></h2>\r\n                </div>\r\n            </div>\r\n            <div className=\"new-election\" onClick={showNewElectionModal}>\r\n                <h3>Create New Election <span>+</span></h3>\r\n            </div>\r\n            \r\n\r\n            <div className=\"card-container\">\r\n        \r\n            {data.map(a=>(  \r\n                <Link to={`/home/${a.name}`} style={{textDecoration:'none' }}><Cards  key={a.name} data={a}/></Link>\r\n                ))}\r\n                \r\n              \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\n     \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react'\r\nimport './styles/winner.css'\r\n\r\nexport default function Winner({key, position ,data}) {\r\n    return (\r\n        <div className=\"winner\">\r\n            <h5>{position}</h5>\r\n\r\n            <div className=\"title\">\r\n                <h3>{data.name}</h3>\r\n                <h4>{data.dept}</h4>\r\n            </div>\r\n            \r\n            <h2>{data.votes}<span>Votes</span></h2>\r\n        </div>\r\n    )\r\n}\r\n","import React,{useState,useEffect} from 'react'\r\nimport './styles/resultsPage.css'\r\nimport Winner from './winner'\r\nimport {db} from './firebase/firestore'\r\n\r\nexport default function ResultsPage(res) {\r\n    //console.log(res.match.params.id)\r\n    let document_id=res.match.params.id\r\n    const winners=[]\r\n    const [winner,setWinner]=useState([])\r\n\r\n    const getWinners=()=>{\r\n        db.collection('files').doc(document_id).collection(\"candidates\").orderBy('votes',\"desc\").get()\r\n            .then(res=>{\r\n                res.docs.forEach(a=>{\r\n                    winners.push(a.data())\r\n                })\r\n                setWinner(winners)\r\n            })\r\n    }\r\n    useEffect(()=>getWinners(),[])\r\n\r\n    console.log(winner)\r\n    return (\r\n        \r\n        <div className=\"results-page\">\r\n            <div className=\"top-bar\">\r\n                <div className=\"navbar\">\r\n                    <h1>Vote EM UP</h1>\r\n                </div>\r\n                <h2>Best footballer in the world</h2>\r\n            </div>\r\n            <div className=\"winners\">\r\n            {winner.map(a=>{\r\n                let index=(winner.indexOf(a))\r\n                return(\r\n                <Winner key={a.name} position={index+1} data={a}/>\r\n            )})}\r\n            \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, {useState, useEffect} from 'react';\nimport {BrowserRouter, Route, Switch} from 'react-router-dom';\nimport HomeOut from './home-out';\nimport HomeOn from './home-on';\nimport ElectionPage from './election-page';\nimport ResultsPage from './results-page'\n\nimport {db,auth} from './firebase/firestore'\n\nfunction App() {\n\n\n\n  return (\n   <BrowserRouter>\n      <Switch>\n      <Route path='/' exact component={HomeOut}/>\n      <Route path='/home' exact component={HomeOn}/>\n      <Route path='/home/:id'  component={ElectionPage}/>\n      <Route path='/results/:id' component={ResultsPage}/>\n      </Switch>\n   </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}